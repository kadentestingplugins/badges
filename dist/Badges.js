function I(e,t,n){window.enmity.settings.set(e,t,n)}function B(e,t,n){return window.enmity.settings.get(e,t,n)}function J(e){window.enmity.plugins.registerPlugin(e)}const a=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars;const E=window.enmity.modules.common.Native,o=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher;const _=window.enmity.modules.common.Storage,p=window.enmity.modules.common.Toasts,V=window.enmity.modules.common.Dialog;window.enmity.modules.common.Token;const R=window.enmity.modules.common.REST;window.enmity.modules.common.Settings,window.enmity.modules.common.Users;const K=window.enmity.modules.common.Navigation;window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme,window.enmity.modules.common.Linking;const N=window.enmity.modules.common.StyleSheet;window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes;const{components:s}=window.enmity;s.Alert,s.Button,s.FlatList;const Q=s.Image;s.ImageBackground,s.KeyboardAvoidingView,s.Modal,s.Pressable,s.RefreshControl;const Z=s.ScrollView;s.SectionList,s.StatusBar,s.StyleSheet,s.Switch;const g=s.Text;s.TextInput,s.TouchableHighlight;const v=s.TouchableOpacity;s.TouchableWithoutFeedback,s.Touchable;const f=s.View;s.VirtualizedList,s.Form,s.FormArrow,s.FormCTA,s.FormCTAButton,s.FormCardSection,s.FormCheckbox;const M=s.FormDivider;s.FormHint,s.FormIcon,s.FormInput,s.FormLabel,s.FormRadio;const c=s.FormRow,U=s.FormSection;s.FormSelect,s.FormSubLabel;const ee=s.FormSwitch;s.FormTernaryCheckBox,s.FormText,s.FormTextColors,s.FormTextSizes;const D={byProps:(...e)=>window.enmity.modules.filters.byProps(...e),byName:(e,t)=>window.enmity.modules.filters.byName(e,t),byTypeName:(e,t)=>window.enmity.modules.filters.byTypeName(e,t),byDisplayName:(e,t)=>window.enmity.modules.filters.byDisplayName(e,t)};function O(...e){return window.enmity.modules.bulk(...e)}function te(...e){return window.enmity.modules.getByProps(...e)}window.enmity.modules.common;const T=e=>{let t=0;for(let n in e)t++;return t};function r(e){return window.enmity.assets.getIDByName(e)}const w={Debug:r("debug"),Retry:r("ic_message_retry"),Failed:r("Small"),Cancel:r("ic_megaphone_nsfw_16px"),Add:r("add_white"),Delete:r("ic_message_delete"),Clear:r("ic_clear_all_24px"),Pencil:r("ic_pencil_24px"),Success:r("ic_selection_checked_24px"),Copy:r("toast_copy_link"),Open:r("ic_leave_stage"),Clipboard:r("pending-alert"),Initial:r("coffee"),Debug_Command:{Sent:r("ic_application_command_24px"),Clock:r("clock")},Settings:{Toasts:{Context:r("toast_image_saved"),Settings:r("ic_selection_checked_24px")},Self:r("friends_toast_icon"),Share:r("share"),Robot:r("ic_robot_24px"),Commands:r("ic_profile_badge_bot_commands"),Debug:r("ic_rulebook_16px")}},F=e=>{p.open({content:`Copied ${e} to clipboard.`,source:w.Clipboard})},oe=e=>{let t=e.split(`
`).map(n=>{if(n!="")return`"${n.replaceAll(":",'":"').replace(" ","")}",`});return t[0]=`{${t[0]}`,t[T(t)]=`${t[T(t)]}}`,t=t.join(""),t=t.replaceAll("undefined",""),t=t.split("").reverse().join("").replace(",","").split("").reverse().join(""),t};async function ne(){try{let e=await _.getItem("device_list");if(e)return JSON.parse(e);let t=(await R.get("https://gist.githubusercontent.com/adamawolf/3048717/raw/1ee7e1a93dff9416f6ff34dd36b0ffbad9b956e9/Apple_mobile_device_types.txt")).text,n=oe(t);await _.setItem("device_list",n);let i=await _.getItem("device_list");return JSON.parse(i)}catch(e){console.warn(`[SpinsPlugins Local Error \u2014 Issue when getting devices: ${e}]`);return}}async function se(e,t,n){let i=await ne();return`**[${e}] Debug Information**
> **Plugin Version:** ${t}
> **Plugin Build:** ${n.split("-")[1]}
> **Discord Build:** ${E.InfoDictionaryManager.Version} (${E.InfoDictionaryManager.Build})
> **Software Version:** ${E.DCDDeviceManager.systemVersion}
> **Device:** ${i[E.DCDDeviceManager.device]}`}const{native:b}=window.enmity;function ie(){b.reload()}b.version,b.build,b.device,b.version;const le=te("transitionToGuild");async function ae({manifest:e}){const t=`${e.sourceUrl}?${Math.floor(Math.random()*1001)}.js`,n=await(await R.get(t)).text;let i=n.match(/\d\.\d\.\d+/g),l=n.match(/patch\-\d\.\d\.\d+/g);return!i||!l?k(e.name,e.version):(i=i[0],l=l[0],i!=e.version?C(t,i,l.split("-")[1],e,!1):l!=e.build?C(t,i,l.split("-")[1],e,!0):k(e.name,e.version))}const C=(e,t,n,i,l)=>{const d=l?n:t;V.show({title:"Update found",body:`A newer ${l?"build":"version"} is available for ${i.name}. ${l?`
The version will remain at ${t}, but the build will update to ${n}.`:""}
Would you like to install ${l?`build \`${n}\``:`version \`${t}\``}  now?`,confirmText:"Update",cancelText:"Not now",onConfirm:()=>re(e,d,i,l)})},k=(e,t)=>{console.log(`[${e}] Plugin is on the latest version, which is ${t}`),p.open({content:`${e} is on latest version (${t})`,source:w.Success})};async function re(e,t,n,i){window.enmity.plugins.installPlugin(e,({data:l})=>{l=="installed_plugin"||l=="overridden_plugin"?V.show({title:`Updated ${n.name}`,body:`Successfully updated to ${i?"build":"version"} \`${t}\`. 
Would you like to reload Discord now?`,confirmText:"Yep!",cancelText:"Not now",onConfirm:()=>{ie()}}):V.show({title:"Error",body:`Something went wrong while updating ${n.name}.`,confirmText:"Report this issue",cancelText:"Cancel",onConfirm:()=>{le.openURL(`https://github.com/spinfal/enmity-plugins/issues/new?assignees=&labels=bug&template=bug_report.md&title=%5BBUG%5D%20${n.name}%20Update%20Error%3A%20${i?`b${t}`:`v${t}`}`)}})})}const L=window.enmity.modules.common.Components.General.Animated,[$,ce]=O(D.byProps("transitionToGuild"),D.byProps("setString"));var me=({manifest:e})=>{const t=N.createThemedStyleSheet({container:{paddingTop:30,paddingLeft:20,marginBottom:-5,flexDirection:"row"},text_container:{paddingLeft:15,paddingTop:5,flexDirection:"column",flexWrap:"wrap"},image:{width:75,height:75,borderRadius:10},main_text:{opacity:.975,letterSpacing:.25,fontFamily:a.Fonts.DISPLAY_NORMAL},header:{color:a.ThemeColorMap.HEADER_PRIMARY,fontFamily:a.Fonts.DISPLAY_BOLD,fontSize:25,letterSpacing:.25},sub_header:{color:a.ThemeColorMap.HEADER_SECONDARY,opacity:.975,fontSize:12.75}}),n=o.useRef(new L.Value(1)).current,i=()=>{L.spring(n,{toValue:1.1,duration:250,useNativeDriver:!0}).start()},l=()=>{L.spring(n,{toValue:1,duration:250,useNativeDriver:!0}).start()},d=()=>{$.openURL("https://spin.rip/")},x={transform:[{scale:n}]};return o.createElement(o.Fragment,null,o.createElement(f,{style:t.container},o.createElement(v,{onPress:d,onPressIn:i,onPressOut:l},o.createElement(L.View,{style:[x]},o.createElement(Q,{style:[t.image],source:{uri:"https://cdn.spin.rip/r/l9uevwe4ia0.jpg"}}))),o.createElement(f,{style:t.text_container},o.createElement(v,{onPress:()=>{$.openURL(e.sourceUrl)}},o.createElement(g,{style:[t.main_text,t.header]},e.name," ")),o.createElement(f,{style:{flexDirection:"row"}},o.createElement(g,{style:[t.main_text,t.sub_header]},"A plugin by"),o.createElement(v,{onPress:()=>{$.openURL("https://spin.rip/")}},o.createElement(g,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:a.Fonts.DISPLAY_BOLD}]},e.authors[0].name))),o.createElement(f,{style:{flexDirection:"row"}},o.createElement(g,{style:[t.main_text,t.sub_header]},"Settings page by"),o.createElement(v,{onPress:()=>{$.openURL("https://github.com/acquitelol/")}},o.createElement(g,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:a.Fonts.DISPLAY_BOLD}]},"Rosie<3"))),o.createElement(f,null,o.createElement(v,{style:{flexDirection:"row"},onPress:()=>{ce.setString(`**${e.name}** v${e.version}`),F("plugin name and version")}},o.createElement(g,{style:[t.main_text,t.sub_header]},"Version:"),o.createElement(g,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:a.Fonts.DISPLAY_BOLD}]},e.version," "))))))};const[de,A]=O(D.byProps("transitionToGuild"),D.byProps("setString"));var ue=({manifest:e,settings:t,hasToasts:n,children:i,commands:l})=>{const d=N.createThemedStyleSheet({bottom_padding:{paddingBottom:25},icon:{color:a.ThemeColorMap.INTERACTIVE_NORMAL},item:{color:a.ThemeColorMap.TEXT_MUTED},text_container:{display:"flex",flexDirection:"column"}}),[x,H]=o.useState(),[P,X]=o.useState();return o.createElement(o.Fragment,null,o.createElement(Z,{onTouchStart:u=>{H(u.nativeEvent.pageX),X(u.nativeEvent.pageY)},onTouchEnd:u=>{x-u.nativeEvent.pageX<-100&&P-u.nativeEvent.pageY<40&&P-u.nativeEvent.pageY>-40&&K.pop()}},o.createElement(me,{manifest:e}),i,l&&o.createElement(U,{title:"Plugin Commands"},l.map(u=>o.createElement(c,{label:`/${u.name}`,subLabel:u.description,leading:o.createElement(c.Icon,{style:d.icon,source:w.Settings.Commands}),trailing:c.Arrow,onPress:function(){A.setString(`/${u.name}`),F(`the command ${u.name}`)}}))),o.createElement(U,{title:"Utility"},n&&o.createElement(o.Fragment,null,o.createElement(c,{label:"Initialization Toasts",leading:o.createElement(c.Icon,{style:d.icon,source:w.Settings.Toasts.Context}),subLabel:`If available, show toasts when ${e.name} is starting`,trailing:o.createElement(ee,{value:t.getBoolean(`${e.name}-toastEnable`,!1),onValueChange:()=>{t.toggle(`${e.name}-toastEnable`,!1),p.open({content:`Successfully ${t.getBoolean(`${e.name}-toastEnable`,!1)?"enabled":"disabled"} initialization toasts.`,source:w.Success})}})}),o.createElement(M,null)),o.createElement(c,{label:"Copy Debug Info",subLabel:`Copy useful debug information of ${e.name} to clipboard.`,leading:o.createElement(c.Icon,{style:d.icon,source:w.Settings.Debug}),trailing:c.Arrow,onPress:async function(){A.setString(await se(e.name,e.version,e.build)),F("plugin debug information")}}),o.createElement(M,null),o.createElement(c,{label:"Clear Device List Cache",subLabel:"Remove the fetched device list storage. This will not clear Discord's or your iDevice's cache.",leading:o.createElement(c.Icon,{style:d.icon,source:w.Delete}),trailing:c.Arrow,onPress:async function(){await _.removeItem("device_list"),p.open({content:"Cleared device list storage.",source:w.Success})}})),o.createElement(U,{title:"Source"},o.createElement(c,{label:"Check for Updates",subLabel:`Check for any plugin updates for ${e.name}.`,leading:o.createElement(c.Icon,{style:d.icon,source:w.Copy}),trailing:c.Arrow,onPress:()=>{ae({manifest:e})}}),o.createElement(M,null),o.createElement(c,{label:"Source",subLabel:`View ${e.name} source code`,leading:o.createElement(c.Icon,{style:d.icon,source:w.Open}),trailing:c.Arrow,onPress:()=>{de.openURL(`https://github.com/spinfal/enmity-plugins/tree/master/${e.name}`)}})),o.createElement(c,{style:d.bottom_padding,label:`Plugin Version: ${e.version}
Plugin Build: ${e.build.split("-").pop()}`})))},we="CustomSlowmode",ge="1.0.0",he="patch-1.0.5",ye="Add custom values to the slowmode slider or remove values that you do not want!",ve=[{name:"spin",id:"308440976723148800"}],fe="#ff0069",be="https://raw.githubusercontent.com/spinfal/enmity-plugins/master/dist/CustomSlowmode.js",W={name:we,version:ge,build:he,description:ye,authors:ve,color:fe,sourceUrl:be};function m(e,t,n,i){window.enmity.clyde.sendReply(e,t,n,i)}var Y;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.Guild=1]="Guild",e[e.DM=2]="DM"})(Y||(Y={}));var h;(function(e){e[e.Chat=1]="Chat",e[e.User=2]="User",e[e.Message=3]="Message"})(h||(h={}));var y;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.BuiltInText=1]="BuiltInText",e[e.BuiltInIntegration=2]="BuiltInIntegration",e[e.Bot=3]="Bot",e[e.Placeholder=4]="Placeholder"})(y||(y={}));var G;(function(e){e[e.Role=1]="Role",e[e.User=2]="User"})(G||(G={}));var S;(function(e){e[e.SubCommand=1]="SubCommand",e[e.SubCommandGroup=2]="SubCommandGroup",e[e.String=3]="String",e[e.Integer=4]="Integer",e[e.Boolean=5]="Boolean",e[e.User=6]="User",e[e.Channel=7]="Channel",e[e.Role=8]="Role",e[e.Mentionnable=9]="Mentionnable",e[e.Number=10]="Number",e[e.Attachment=11]="Attachment"})(S||(S={}));var j;(function(e){e[e.ApplicationCommand=2]="ApplicationCommand",e[e.MessageComponent=3]="MessageComponent"})(j||(j={}));const Se={id:"add-slowmode-value",name:"slowmode add",displayName:"slowmode add",description:"Add a value to the slowmode list",displayDescription:"Add a value to the slowmode list",type:h.Chat,inputType:y.BuiltInText,options:[{name:"seconds",displayName:"seconds",description:"The new value (in seconds) that you want to add",displayDescription:"The new value (in seconds) that you want to add",type:S.Integer,required:!0}],execute:async function(e,t){const n=parseInt(e[e.findIndex(i=>i.name==="seconds")].value);try{if(a.SLOWMODE_VALUES.includes(n)){m(t?.channel.id??"0",`The value \`${n}\` already exists.`);return}else if(n<1){m(t?.channel.id??"0",`The value \`${n}\` must be greater than 0.`);return}a.SLOWMODE_VALUES.push(n),a.SLOWMODE_VALUES.sort((i,l)=>i-l),m(t?.channel.id??"0",`The value \`${n}\` has been added.`),I("_customSlowmode","slowmodeValues",a.SLOWMODE_VALUES)}catch(i){console.log("[ addSlowmodeValue Error ]",i),m(t?.channel.id??"0","An error occured while adding a slowmode value. Check debug logs for more info.")}}},Ee={id:"list-slowmode-values",name:"slowmode list",displayName:"slowmode list",description:"List the values that are currently in the slowmode list",displayDescription:"List the values that are currently in the slowmode list",type:h.Chat,inputType:y.BuiltInText,options:[{name:"whisper",displayName:"whisper",description:"Only you can see the response",displayDescription:"Only you can see the response",type:S.Boolean,required:!1}],execute:async function(e,t){const n=e[e.findIndex(i=>i.name==="whisper")];try{const i={type:"rich",title:"Slowmode Values",description:a.SLOWMODE_VALUES?.length>0?a.SLOWMODE_VALUES.map(l=>`${l}s (${Math.floor(l/60)}m)`).join(`
`):"No values found",footer:{text:"Not every value will work. This is a limitation set by Discord."},color:"0xff0069"};if(n?.value??!0){m(t?.channel.id??"0",{embeds:[i]});return}else return{content:a.SLOWMODE_VALUES?.length>0?a.SLOWMODE_VALUES.map(l=>`${l}s (${Math.floor(l/60)}m)`).join(`
`):"No values found"}}catch(i){console.log("[ listSlowmodeValues Error ]",i),m(t?.channel.id??"0","An error occured while fetching and listing the slowmode values. Check debug logs for more info.")}}},_e={id:"remove-slowmode-value",name:"slowmode remove",displayName:"slowmode remove",description:"Remove a value to the slowmode list",displayDescription:"Remove a value to the slowmode list",type:h.Chat,inputType:y.BuiltInText,options:[{name:"value",displayName:"value",description:"The value that you want to remove",displayDescription:"The value that you want to remove",type:S.Integer,required:!0}],execute:async function(e,t){const n=parseInt(e[e.findIndex(i=>i.name==="value")].value);try{if(!a.SLOWMODE_VALUES.includes(n)){m(t?.channel.id??"0",`The value \`${n}\` does not exist.`);return}a.SLOWMODE_VALUES.splice(a.SLOWMODE_VALUES.indexOf(n),1),a.SLOWMODE_VALUES.sort((i,l)=>i-l),I("_customSlowmode","slowmodeValues",a.SLOWMODE_VALUES),m(t?.channel.id??"0",`The value \`${n}\` has been removed.`)}catch(i){console.log("[ removeSlowmodeValue Error ]",i),m(t?.channel.id??"0","An error occured while removing a slowmode value. Check debug logs for more info.")}}},pe={id:"reset-slowmode-values",name:"slowmode reset",displayName:"slowmode reset",description:"Reset the slowmode values to Discord's default values",displayDescription:"Reset the slowmode values to Discord's default values",type:h.Chat,inputType:y.BuiltInText,execute:async function(e,t){try{const n=[0,5,10,15,30,60,120,300,600,900,1800,3600,7200,21600];if(a.SLOWMODE_VALUES=n,I("_customSlowmode","slowmodeValues",a.SLOWMODE_VALUES),a.SLOWMODE_VALUES===n&&B("_customSlowmode","slowmodeValues",null)===n){m(t?.channel.id??"0","Slowmode values have been reset to Discord's default values.");return}else{m(t?.channel.id??"0","An error occured while resetting the slowmode values.");return}}catch(n){console.log("[ resetSlowmodeValues Error ]",n),m(t?.channel.id??"0","An error occured while resetting the slowmode values. Check debug logs for more info.")}}},z=[Se,_e,Ee,pe],q=[0,5,10,15,30,60,120,300,600,900,1800,3600,7200,21600],De={...W,onStart(){this.commands=z,a.SLOWMODE_VALUES=B("_customSlowmode","slowmodeValues",q)},onStop(){this.commands=[],a.SLOWMODE_VALUES=q},patches:[],getSettingsPanel({settings:e}){return o.createElement(ue,{manifest:W,settings:e,hasToasts:!1,commands:z})}};J(De);
